name: ci
on: [push]
jobs:
  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [macos, ubuntu, windows]
        include:
          - name: macos
            os: macos-latest
            compiler: gcc
            version: "9"
          - name: ubuntu
            os: ubuntu-latest
          - name: windows
            os: windows-latest
          - name: arm64
            uses: uraimo/run-on-arch-action@v1.0.5

    steps:
      - uses: actions/checkout@v1
      - name: setup macos environment
        if: runner.os == 'macOS'
        run: |
          brew install gcc cmake
          echo "::set-env name=CC::gcc-${{ matrix.version }}"
          echo "::set-env name=CXX::g++-${{ matrix.version }}"
      - name: setup ubuntu environment
        if: runner.os == 'Linux'
        run: sudo apt install uuid-dev
      - name: make build directory
        run: mkdir build
      - name: configure and compile
        working-directory: build
        run: |
          cmake ..
          cmake --build . --config RelWithDebInfo
  arm64:
    runs-on: ubuntu-latest
    name: arm64
    steps:
      - uses: actions/checkout@v1.0.0
      - uses: uraimo/run-on-arch-action@v1.0.5
      - name: setup arm64 environment
        id: runcmd
        with:
          architecture: aarch64
          distribution: ubuntu18.04
          run: |
            sudo apt install uuid-dev
            mkdir build
            cd build
            cmake ..
            cmake --build . --config RelWithDebInfo